'''
Функции в Python
Разбиение на логические части
Сокрытие деталей реализации
Переиспользование кода
Создание новых функций

Объявление функции

def min2(a,b):          def - заголовок
    if a<=b:            затем название функции
        return(a)       аргументы (параметры)
    else:               тело функции
        return b        return

Вызов функции
m = min2(42, 30)
m = min2(min2(32, 40), 25)
Функция должна быть объявлена ранее первого вызова.

Функции бывают разные:
 - Без возвращаемого значения                   return _ (blank)
 - Без параметров                               def foo():
 - Произвольное число параметров                print(a), print(a,b)...
 - Параметры со значением по умолчанию

Произвольное число параметров
def min(a): (или *a) - to be discovered
    m = a[0]
    for x in a:
        if m > x:
            m = x
    return m

Значения параметров по умолчанию
def my_range(start, stop, step = 1):
    res = []
    if step > 0:
        x = start
        while x < stop
            res += [x]
            x += step
    elif step < 0:
        x = start
        while x > stop
            res += [x]
            x += step
    return res
Выдаёт list сгенерированный от (нач, кон, шаг)

Если передавать аргументы не поименно - они будут восприниматься функцией последовательно, как в декларации.
В функцию print мы можем передать значение переменной end поименно(и переставлять их при вызове)
print(something, end='')
my_range(stop = 20, start = 5)

Локальные переменные
Переменные, которые объявлены внутри функции - локальные. Их нельзя использовать вне ф-ции.

def init_values():
    a = 100
    b = 200
init_values()
print(a + b) - ошибка, переменные a и b не объявлены

Все изменения, происходящие с переменными в теле функции - происходят локально.

Изменение объектов, связанных с локальными переменными
def append_zero(xs):    Я так понял, это работает как с указателями
    xs.append(0)

a = []
append_zero(a)
print(a) = [0]

Глобальные переменные
Глобальные переменные - переменные, объявленные вне всяких функций.
Их можно использовать во всей программе.

def print_value():
    print(a)                    это сработает, если мы заранее проинициализируем
                                глобальную переменную a
                                a = 5
                                print_value() # 5

Пример с глобальными и локальными переменными

def print_value():
    print(a)
    a = 10            - локальная переменная (мы её еще не проинициализировали)
    print(a)
a = 5
print_value()         - Local variable 'a' referenced before assignment



'''