# Задать объекту имя и общаться с ним посредством его имени - просто
# Для этой цели в языках программирования придуманы переменные

# Пример
a = 2  # Присваиваем переменной значение 2
b = 3
print(a + b)  # 5
a = 6  # Присваиваем новое значение
print(a + b)  # 9
b = b + 2
print(b)  # 5
# print(c)
# NameError: name 'c' is not defined
# Любая переменная в python должна быть проинициализирована перед использованием

# Переменные инициализируются с помощью оператора присваивания
#   a = 2
#   a - имя переменной
#   = - оператор присваивания
#   2 - значение
#   2 = a - ошибка, имя переменной должно быть слева от оператора присваивания

# Операторы приращения
# Конструкция a += 3 аналогична конструкции а = а + 3
# Аналогичным образом выполняются нижеперечисленные конструкции
#  +=  -=  *=  /=  //=  %=  **=

# Имя переменной
#   a = 2   a - имя переменной
# Имя переменной
#  -может состоять из букв(строчных и прописных), цифр, подчёркивания _
#  -должно начинаться с буквы или подчёркивания
#  -не должно являться ключевым словом
#  -регистр букв имеет значение

# Python - язык с динамической типизацией
#   a = 2
#   a = 'abacaba'
#   a = foo()
# Переменная может менять тип по ходу программы.
# Поэтому, в Python, вообще говоря, некорректно говорить, что переменная имеет какой-то тип.
# Можно говорить, что переменная имеет какой-то тип в какой-то момент исполнения программы,
# когда переменная связана с определенным объектом.

# Ввод данных
# Для пользовательского ввода данных в Python существует функция input
#   input() читает строку с клавиатуры
#   input('Введите данные') читает строку с приглашением к вводу
#   s = input() - записать в переменную s пользовательский ввод
#   a = int(input()) - прочитать строку с клавиатуры и преобразовать в число
# Вывод данных - print('some output')
# В функцию print можно передать несколько параметров, через запятую
#   print(a , b)


